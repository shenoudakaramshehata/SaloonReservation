// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using SaloonReservation.Models;

namespace SaloonReservation.Data
{
    public partial class SalonContext : DbContext
    {
        public SalonContext()
        {
        }

        public SalonContext(DbContextOptions<SalonContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Barber> Barbers { get; set; }

        public virtual DbSet<BarberImage> BarberImages { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<AppointmentStatus> AppointmentStatuses { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
		public virtual DbSet<PageContent> PageContents { get; set; }
		public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<AppointmentService> AppointmentServices { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<WeekDay> WeekDays { get; set; }
        public virtual DbSet<PublicSection> PublicSections { get; set; }
		public DbSet<ContactUs> contactUs { get; set; }

        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<SoicialMidiaLink> SoicialMidiaLinks { get; set; }
        public virtual DbSet<PublicSlider> PublicSliders { get; set; }
        public virtual DbSet<TemporaryAppointment> TemporaryAppointments { get; set; }
        public virtual DbSet<TemporaryAppointmentService> TemporaryAppointmentServices { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
			modelBuilder.Entity<PageContent>().HasData(new PageContent { PageContentId = 1, PageTitleAr = "من نحن", PageTitleEn = "AboutUs", ContentAr = "AboutUs", ContentEn = "AboutUs" });
			modelBuilder.Entity<PageContent>().HasData(new PageContent { PageContentId = 2, PageTitleAr = "سياسة الخصوصية", PageTitleEn = "Privacy", ContentAr = "Privacy", ContentEn = "Privacy" });
			modelBuilder.Entity<PageContent>().HasData(new PageContent { PageContentId = 3, PageTitleAr = "الشروط والأحكام", PageTitleEn = "Terms", ContentAr = "Terms", ContentEn = "Terms" });
			modelBuilder.Entity<AppointmentStatus>().HasData(new AppointmentStatus { AppointmentStatusId = 1, AppointmentStatusTitleAR = "جديد",AppointmentStatusTitleEN="New" });
            modelBuilder.Entity<AppointmentStatus>().HasData(new AppointmentStatus { AppointmentStatusId = 2, AppointmentStatusTitleAR = "مغلق", AppointmentStatusTitleEN = "Closed" });
            modelBuilder.Entity<AppointmentStatus>().HasData(new AppointmentStatus { AppointmentStatusId = 3, AppointmentStatusTitleAR = "ملغي", AppointmentStatusTitleEN = "Canceled" });
            modelBuilder.Entity<Gender>().HasData(new Gender { GenderId = 1, GenderTLAr = "ولد", GenderTLEn = "Boy" });
            modelBuilder.Entity<Gender>().HasData(new Gender { GenderId = 2, GenderTLAr = "بنت", GenderTLEn = "Girl" });
            modelBuilder.Entity<SoicialMidiaLink>().HasData(new SoicialMidiaLink { SoicialMidiaLinkId =1, Facebook = "https://www.facebook.com/", Twitter = "https://twitter.com/", Instgram= "https://www.instagram.com/", WhatsApp= "https://web.whatsapp.com/", Youtube= "https://youtube.com/", LinkedIn= "https://www.linkedin.com/" });
            modelBuilder.Entity<Service>().HasData(
        new Service
        {
            ServiceId = 1,
            GenderId = 1,
            serviceTlEn = "Hair Cut",
             serviceTlAr= "قص الشعر",
            OneKidPrice = 4.0,
            MoreKidsPrice = 6.0
        },
        new Service
        {
            ServiceId = 2,
            GenderId = 1,
            serviceTlEn = "Hair Trim",
            serviceTlAr = "تقليم الشعر",
            OneKidPrice = 4.0,
            MoreKidsPrice = 6.0
        },
         new Service
         {
             ServiceId = 3,
             GenderId = 1,
             serviceTlEn = "Bang Trim",
             serviceTlAr = "تقليم الأمام",
             OneKidPrice = 2.0,
             MoreKidsPrice = 4.0
         },
    new Service
    {
        ServiceId = 4,
        GenderId = 1,
        serviceTlEn = "Blowing-Short",
        serviceTlAr = "تصفيف الشعر - قصير",
        OneKidPrice = 4.0,
        MoreKidsPrice = 6.0
    },
    new Service
    {
        ServiceId = 5,
        GenderId = 1,
        serviceTlEn = "Blowing-Medium",
        serviceTlAr = "تصفيف الشعر - متوسط",
        OneKidPrice = 6.0,
        MoreKidsPrice = 8.0
    },
    new Service
    {
        ServiceId = 6,
        GenderId = 1,
        serviceTlEn = "Blowing-Long",
        serviceTlAr = "تصفيف الشعر - طويل",
        OneKidPrice = 8.0,
        MoreKidsPrice = 10.0
    },
    new Service
    {
        ServiceId = 7,
        GenderId = 1,
        serviceTlEn = "Hair-Iron-Short",
        serviceTlAr = "تسريح الشعر بالمكواة - قصير",
        OneKidPrice = 6.0,
        MoreKidsPrice = 6.0
    },
    new Service
    {
        ServiceId = 8,
        GenderId = 1,
        serviceTlEn = "Hair-Iron-Medium",
        serviceTlAr = "تسريح الشعر بالمكواة - متوسط",
        OneKidPrice = 8.0,
        MoreKidsPrice = 8.0
    },
    new Service
    {
        ServiceId = 9,
        GenderId = 1,
        serviceTlEn = "Hair-Iron-Long",
        serviceTlAr = "تسريح الشعر بالمكواة - طويل",
        OneKidPrice = 10.0,
        MoreKidsPrice = 10.0
    },
    new Service
    {
        ServiceId = 10,
        GenderId = 1,
        serviceTlEn = "Hair Wash",
        serviceTlAr = "غسيل الشعر",
        OneKidPrice = 1.0,
        MoreKidsPrice = 1.0
    },
    new Service
    {
        ServiceId = 11,
        GenderId = 1,
        serviceTlEn = "Hair Treatment With Natural Oils",
        serviceTlAr = "علاج الشعر بالزيوت الطبيعية",
        OneKidPrice = 5.0,
        MoreKidsPrice = 5.0
    },
    new Service
    {
        ServiceId = 12,
        GenderId = 2,
        serviceTlEn = "Hair Cut",
        serviceTlAr = "قص الشعر",
        OneKidPrice = 4.0,
        MoreKidsPrice = 6.0
    },
    new Service
    {
        ServiceId = 13,
        GenderId = 2,
        serviceTlEn = "Hair Wash",
        serviceTlAr = "غسيل الشعر",
        OneKidPrice = 1.0,
        MoreKidsPrice = 1.0
    },
    new Service
    {
        ServiceId = 14,
        GenderId = 2,
        serviceTlEn = "Special Needs Hair Cut",
        serviceTlAr = "قص الشعر للحالات الخاصة",
        OneKidPrice = 4.0,
        MoreKidsPrice = 4.0
    },
    new Service
    {
        ServiceId = 15,
        GenderId = 2,
        serviceTlEn = "Adult Shaving",
        serviceTlAr = "حلاقة الكبار",
        OneKidPrice = 2.0,
        MoreKidsPrice = 2.0
    }
);
            modelBuilder.Entity<Customer>().HasData(
      new Customer
      {
          CustomerId = 1,
          FullName = "Customer 1",
          Email = "mail@site.com",
          Phone = "5587485778",
          CityId = null,
          AreaId = null,
          FullAddress = "Kuwait -sharq - block 2, st 133",
          MapLocation = null
      }
            );
            modelBuilder.Entity<Barber>().HasData(
        new Barber
        {
            BarberId = 1,
            FullName = "Barber 1",
            Phone = "258745874",
            Image = "1.jpg",
            IsActive = true,
            Description = "good barber good barber good barber good barber good barber good barber",
            OffWeekDayId = null
        },
        new Barber
        {
            BarberId = 2,
            FullName = "Barber 2",
            Phone = "685784845",
            Image = "2.jpg",
            IsActive = true,
            Description = "good barber good barber good barber good barber good barber good barber",
            OffWeekDayId = null
        }
    // Add more Barber entries here as needed
    );
            modelBuilder.Entity<WeekDay>().HasData(
            new WeekDay { WeekDayId = 1, WeekDayIndex = 1, WeekDayTitle = "Monday" },
            new WeekDay { WeekDayId = 2, WeekDayIndex = 2, WeekDayTitle = "Tuesday" },
            new WeekDay { WeekDayId = 3, WeekDayIndex = 3, WeekDayTitle = "Wednesday" },
            new WeekDay { WeekDayId = 4, WeekDayIndex = 4, WeekDayTitle = "Thursday" },
            new WeekDay { WeekDayId = 5, WeekDayIndex = 5, WeekDayTitle = "Friday" },
            new WeekDay { WeekDayId = 6, WeekDayIndex = 6, WeekDayTitle = "Saturday" },
            new WeekDay { WeekDayId = 7, WeekDayIndex = 7, WeekDayTitle = "Sunday" }
        );





        }
    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}